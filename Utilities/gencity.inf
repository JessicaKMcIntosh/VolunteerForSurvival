! ------------------------------------------------------------------------------
! Gen City - Generate the room code for the city.
!
! Created by Jessica McIntosh
! JessicaKMcIntosh AT gmail DOT com
!
! This work is licensed under the Creative Commons Attribution-ShareAlike 4.0
! International License. See the file LICENSE for details.
! ------------------------------------------------------------------------------
! This file will generate all of the rooms for the city.
!
! Room notation: ROOM_AVE_STREET
! If a room is between streets or avenues then the locations they are between
! are added. See the examples.
!
! The edges of the map will reference Avenues and Streets that are no included
! in the map for consistency in naming.
!
! Rooms for the City will automatically link together.
!
! Intersections:
!   City_20_21            The intersection between 20th Ave and 21st St.
!   Subway_20_35          The subway station between 20th Ave and 35th St.
! Avenues:
!   City_20_21_23         On 20th Ave between 21st St and 23rd St.
!   Subway_LINE_22_21_23  Subway station on 22nd Ave between 21st St and 23rd St.
!   Storm_24_29_31        Storm drain on 24th Ave between 29th St and 31st St.
! Streets:
!   City_18_20_21         On 21st St between 18th Ave and 20th Ave.
!   Subway_LINE_20_22_21  Subway station on 21st St between 20th Ave and 22nd Ave.
!   Storm_30_32_27        Storm drain on 27th St between 20th Ave and 32nd Ave.

! ------------------------------------------------------------------------------
! Meta Data
! ------------------------------------------------------------------------------

Release 0;

! ------------------------------------------------------------------------------
! Constants
! ------------------------------------------------------------------------------

! City grid layout.
Constant First_Ave = 20;
Constant Last_Ave = 32;
Constant First_Street = 21;
Constant Last_Street = 37;

! ------------------------------------------------------------------------------
! Globals
! ------------------------------------------------------------------------------

Global Code;    ! The code from Under_Table for the current location.
Global Storm;   ! The current location has a Storm Drain.
Global Subway;  ! The current location has a Subway.
Global Carat;   ! Print a carat. Used for getting the ^ in descriptions.

! ------------------------------------------------------------------------------
! Subway and Storm Drain table
! ------------------------------------------------------------------------------

! A letter indicates that room matches up with the Subway or a storm drain.
! S = Storm drain
! B, G, O = Subway
! b, g, o = Subway with storm drain underneath.
Array Under_Table -->
!     21      23      25      27      29      31      33      35      37
  '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' 'B' '_' '_' '_'
  'O' '_' '_' '_' 'S' '_' '_' '_' '_' '_' 'S' '_' '_' '_' '_' 'B' '_' '_' 'S' ! 20
  '_' 'o' '_' 'S' '_' 'S' '_' 'S' '_' 'S' '_' 'S' '_' 'S' '_' 'b' '_' 'S' '_'
  'G' '_' 'O' '_' 'S' '_' '_' '_' '_' '_' 'S' '_' '_' '_' '_' 'B' '_' '_' 'S' ! 22
  '_' '_' '_' 'O' '_' 'O' '_' 'O' '_' 'O' '_' '_' '_' '_' '_' '_' '_' '_' '_'
  'G' '_' '_' '_' 'S' '_' '_' '_' '_' '_' 'o' '_' '_' '_' '_' '_' 'B' '_' 'S' ! 24
  '_' 'G' '_' '_' '_' '_' '_' '_' '_' '_' '_' 'O' '_' '_' '_' '_' '_' '_' '_'
  '_' '_' 'G' '_' 'S' '_' '_' '_' '_' '_' 'S' '_' 'O' '_' '_' '_' 'B' '_' 'S' ! 26
  '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' 'O' '_' '_' '_' '_' '_'
  '_' '_' 'G' '_' 'S' '_' '_' '_' '_' '_' 'S' '_' '_' 'O' '_' '_' 'B' '_' 'S' ! 28
  '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' 'O' '_' '_' '_' '_' '_'
  '_' '_' 'G' '_' 'S' '_' '_' '_' '_' '_' 'S' '_' '_' 'O' '_' '_' '_' '_' 'S' ! 30
  '_' 'S' '_' 'S' '_' 'S' '_' 'S' '_' 'S' '_' 'S' '_' 'o' '_' 'b' '_' 'S' '_'
  '_' '_' 'G' '_' 'S' '_' '_' '_' '_' '_' 'S' '_' '_' '_' 'O' '_' 'B' '_' 'S' ! 32
  '_' '_' '_' 'G' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' '_' 'O' '_' '_' '_';

! ------------------------------------------------------------------------------
! Helper Routines
! ------------------------------------------------------------------------------

! Lookup the current location in Under_Table then set globals.
[ LookupUnderTable
  Avenue    ! Avenue to lookup.
  Street    ! Street to lookup.
  Pointer;  ! Pointer into the Under_Table array.

  ! Get the code for the current location.
  Pointer = ((Avenue - 19) * 19) + (Street - 20);
  Code = Under_Table-->Pointer;

  ! This location has a Storm Drain.
  if (Code == 'S') Storm = true;
  else Storm = false;

  ! A Storm drain and a Subway.
  ! Set Code to the uppercase letter.
  if (Code > 97) { Storm = true; Code = Code - 32; }

  ! This location has a Subway.
  if (Code == 'B' or 'G' or 'O') Subway = true;
  else Subway = false;
];

[ NumberSuffix
  Number;

  print Number;
  switch (Number % 10) {
    1:        print "st";
    2:        print "nd";
    3:        print "rd";
    default:  print "th";
  }
];

! Print the name of an Avenue between two Streets.
[ PrintHalfAvenue
  Avenue  ! The avenue being generated.
  Left    ! The street to the left of this room.
  Right;  ! The street to the right of this room.

  print (NumberSuffix) Avenue,
        " Ave between ",
        (NumberSuffix) Left,
        " St and ",
        (NumberSuffix) Right,
        " St";
];

! Print the name of a street between two Avenues.
[ PrintHalfStreet
  Street  ! The street being generated.
  Above   ! The avenue above this room.
  Below;  ! The avenue below this room.

  print (NumberSuffix) Street,
        " St between ",
        (NumberSuffix) Above,
        " Ave and ",
        (NumberSuffix) Below,
        " Ave";
];

! Print the name of an intersection.
[ PrintIntersection
  Avenue  ! The avenue being generated.
  Street; ! The street being generated.

  print (NumberSuffix) Avenue,
        " Ave and ",
        (NumberSuffix) Street,
        " St";
];

[ PrintCarat;
  if (Carat) print "@@94^";
  Carat = true;
];

! Print the color of a subway from the code.
[ PrintColor
  Code;   ! The Subway code.

  switch (code) {
    'B':  print "Blue";
    'G':  print "Green";
    'O':  print "Orange";
  }
];

! ------------------------------------------------------------------------------
! Generate the storm drains
! ------------------------------------------------------------------------------

! Generate a storm drain on an avenue between two streets.
[ StormHalfAvenue
  Avenue  ! The avenue being generated.
  Left    ! The street to the left of this room.
  Right;  ! The street to the right of this room.

  print "Storm_Class Storm_", Avenue, "_", Left, "_", Right, " ~";
  print "Storm Drain below ";
  PrintHalfAvenue(Avenue, Left, Right);
  print "~^";
  print "with^";

  ! Generate the description.
  print "description^~";
  Carat = false; ! Reset the carat before printing the description.
  if (Subway)               { PrintCarat(); print "Up to the ", (PrintColor) Code, " subway line."; }
  else                      { PrintCarat(); print "Up to "; PrintHalfAvenue(Avenue, Left, Right); print "."; }
  if (Avenue > First_Ave)   { PrintCarat(); print "North to under "; PrintHalfAvenue((Avenue - 2), Left, Right); print "."; }
  if (Avenue < Last_Ave)    { PrintCarat(); print "South to under "; PrintHalfAvenue((Avenue + 2), Left, Right); print "."; }
  print "~,^";

  ! Generate the directions.
  if (Subway)               print "u_to Subway_", (PrintColor) Code, "_", Avenue, "_", Left, "_", Right, ",^";
  else                      print "u_to City_", Avenue, "_", Left, "_", Right, ",^";
  if (Avenue > First_Ave)   print "n_to Storm_", (Avenue - 2), "_", Left, "_", Right, ",^";
  if (Avenue < Last_Ave)    print "s_to Storm_", (Avenue + 2), "_", Left, "_", Right, ",^";

  ! Special cases.
  if (Avenue == 20 && Left == 23) print "w_to Storm_Junction_20_23,^";
  if (Avenue == 20 && Left == 29) print "w_to Storm_Junction_20_29,^";
  if (Avenue == 20 && Left == 37) print "w_to Storm_Junction_20_37,^";
  if (Avenue == 30 && Left == 23) print "w_to Storm_Junction_30_23,^";
  if (Avenue == 30 && Left == 29) print "w_to Storm_Junction_30_29,^";
  if (Avenue == 30 && Left == 37) print "w_to Storm_Junction_30_37,^";
  if (Avenue == 32 && Left == 37) print "s_to Storm_Junction_34_37,^";

  print ";^^";
];

! Generate a storm drain on a street between two avenues.
[ StormHalfStreet
  Street  ! The street being generated.
  Above   ! The avenue above this room.
  Below;  ! The avenue below this room.

  ! Generate the room code.
  print "Storm_Class Storm_", Above, "_", Below, "_", Street, " ~";
  print "Storm Drain below ";
  PrintHalfStreet(Street, Above, Below);
  print "~^";
  print "with^";

  ! Generate the description.
  print "description^~";
  Carat = false; ! Reset the carat before printing the description.
  if (Subway)                 { PrintCarat(); print "Up to the ", (PrintColor) Code, " subway line."; }
  else                        { PrintCarat(); print "Up to "; PrintHalfStreet(Street, Above, Below); print "."; }
  if (Street > First_Street)  { PrintCarat(); print "West to under "; PrintHalfStreet((Street - 2), Above, Below); print "."; }
  if (Street < Last_Street)   { PrintCarat(); print "East to under "; PrintHalfStreet((Street + 2), Above, Below); print "."; }
  print "~,^";

  ! Generate the directions.
  if (Subway)                 print "u_to Subway_", (PrintColor) Code, "_", Above, "_", Below, "_", Street, ",^";
  else                        print "u_to City_", Above, "_", Below, "_", Street, ",^";
  if (Street > First_Street)  print "w_to Storm_", Above, "_", Below, "_", (Street - 2), ",^";
  if (Street < Last_Street)   print "e_to Storm_", Above, "_", Below, "_", (Street + 2), ",^";

  ! Special case.
  if (Street == 23 && Above == 20) print "n_to Storm_Junction_20_23,^";
  if (Street == 23 && Above == 30) print "n_to Storm_Junction_30_23,^";
  if (Street == 29 && Above == 20) print "n_to Storm_Junction_20_29,^";
  if (Street == 29 && Above == 30) print "n_to Storm_Junction_30_29,^";
  if (Street == 37 && Above == 20) print "n_to Storm_Junction_20_37,^";
  if (Street == 37 && Above == 30) print "n_to Storm_Junction_30_37,^";
  if (Street == 21 && Above == 20) print "n_to Storm_Junction_20_19,^";

  print ";^^";
];
! ------------------------------------------------------------------------------
! Generate the city streets
! ------------------------------------------------------------------------------

! Generate a room on an avenue between two streets.
[ CityHalfAvenue
  Avenue  ! The avenue being generated.
  Left    ! The street to the left of this room.
  Right;  ! The street to the right of this room.


  ! Figure out where in the Under_Table this room is.
  ! Offset the street over to our actual location in the table.
  LookupUnderTable(Avenue, (Left + 1));

  ! Generate the room code.
  print "City_Class City_", Avenue, "_", Left, "_", Right, " ~";
  PrintHalfAvenue(Avenue, Left, Right);
  print "~^";
  print "with^";

  ! Generate the description.
  print "description^~";
  Carat = false; ! Reset the carat before printing the description.
  if (Left >= First_Street || (Left == 19 && Avenue == 20))
                            { PrintCarat(); print "West to "; PrintIntersection(Avenue, Left); print "."; }
  if (Right <= Last_Street) { PrintCarat(); print "East to "; PrintIntersection(Avenue, Right); print "."; }
  if (Subway)               { PrintCarat(); print "Down to the ", (PrintColor) Code, " subway line."; }
  if (Storm && ~~ Subway)   { PrintCarat(); print "Down to the storm drain."; }
  if (Avenue == 28 && Left == 25 && Right == 27)
                            { PrintCarat(); print "South to a suspiciously empty alley."; }
  print "~,^";

  ! Generate the directions.
  if (Left >= First_Street || (Left == 19 && Avenue == 20))
                            print "w_to City_", Avenue, "_", Left, ",^";
  if (Right <= Last_Street) print "e_to City_", Avenue, "_", Right, ",^";
  if (Subway)               print "d_to Subway_", (PrintColor) Code, "_", Avenue, "_", Left, "_", Right, ",^";
  if (Storm && ~~ Subway)   print "d_to Storm_", Avenue, "_", Left, "_", Right, ",^";

  ! Special case.
  if (Avenue == 28 && Left == 25 && Right == 27) print "s_to Start_Alley,^";

  print ";^^";

  if (Storm) StormHalfAvenue(Avenue, Left, Right);
];

! Generate a room on a street between two avenues.
[ CityHalfStreet
  Street  ! The street being generated.
  Above   ! The avenue above this room.
  Below;  ! The avenue below this room.

  ! Figure out where in the Under_Table this room is.
  ! Offset the avenue down one to our actual location in the table.
  LookupUnderTable((Above + 1), Street);

  ! Generate the room code.
  print "City_Class City_", Above, "_", Below, "_", Street, " ~";
  PrintHalfStreet(Street, Above, Below);
  print "~^";
  print "with^";

  ! Generate the description.
  print "description^~";
  Carat = false; ! Reset the carat before printing the description.
  if (Above >= First_Ave)   { PrintCarat(); print "North to "; PrintIntersection(Above, Street); print "."; }
  if (Below <= Last_Ave || (Street == 37 && Below == 34))
                            { PrintCarat(); print "South to "; PrintIntersection(Below, Street); print "."; }
  if (Subway)               { PrintCarat(); print "Down to the ", (PrintColor) Code, " subway line."; }
  if (Storm && ~~ Subway)   { PrintCarat(); print "Down to the storm drain."; }
  print "~,^";

  ! Generate the directions.
  if (Above >= First_Ave)   print "n_to City_", Above, "_", Street, ",^";
  if (Below <= Last_Ave || (Street == 37 && Below == 34))
                            print "s_to City_", Below, "_", Street, ",^";
  if (Subway)               print "d_to Subway_", (PrintColor) Code, "_", Above, "_", Below, "_", Street, ",^";
  if (Storm && ~~ Subway)   print "d_to Storm_", Above, "_", Below, "_", Street, ",^";

  print ";^^";

  if (Storm) StormHalfStreet(Street, Above, Below);
];

! Generate a room at an intersection.
[ CityIntersection
  Avenue  ! The avenue being generated.
  Street; ! The street being generated.

  ! Figure out where in the Under_Table this room is.
  LookupUnderTable(Avenue, Street);

  ! Generate the room code.
  print "City_Class City_", Avenue, "_", Street, " ~";
  PrintIntersection(Avenue, Street);
  print "~^";
  print "with^";

  ! Generate the description.
  print "description^~";
  print "North to "; PrintHalfStreet(Street, (Avenue - 2), Avenue); print ".@@94^";
  print "South to "; PrintHalfStreet(Street, Avenue, (Avenue + 2)); print ".@@94^";
  print "West to ";  PrintHalfAvenue(Avenue, (Street - 2), Street); print ".@@94^";
  print "East to ";  PrintHalfAvenue(Avenue, Street, (Street + 2)); print ".";
  if (Subway)               print "@@94^Down to the ", (PrintColor) Code, " subway line.";
  print "~,^";

  ! Generate the directions.
                            print "n_to City_", (Avenue - 2),"_", Avenue, "_", Street, ",^";
                            print "s_to City_", Avenue, "_", (Avenue + 2), "_", Street, ",^";
                            print "w_to City_", Avenue, "_", (Street - 2), "_", Street, ",^";
                            print "e_to City_", Avenue, "_", Street, "_", (Street + 2), ",^";
  if (Subway)               print "d_to Subway_", (PrintColor) Code, "_", Avenue, "_", Street, ",^";
  if (Storm && ~~ Subway)   print "d_to Storm_", Avenue, "_", Street, "_", (Street + 2), ",^";

  print ";^^";
];

! ------------------------------------------------------------------------------
! Generate the rooms of the city
! ------------------------------------------------------------------------------

[ GenerateRooms
    Avenue
    Street;

  ! Loop over the avenues and streets to generate the city grid.
  for (Avenue = First_Ave: Avenue <= Last_Ave: Avenue = Avenue + 2) {
    for (Street = First_Street: Street <= Last_Street: Street = Street + 2) {
      ! Generate the intersection of the Avenue and Street.
      CityIntersection(Avenue, Street);

      ! Generate the half Avenue room to the left of the current Street.
      CityHalfAvenue(Avenue, (Street - 2), Street);

      ! Generate the half Street above the current Avenue.
      CityHalfStreet(Street, (Avenue - 2), Avenue);

      ! On the last Street generate the half Avenue to the right.
      if (Street >= Last_Street) {
        CityHalfAvenue(Avenue, Street, (Street + 2));
      }

      ! On the last Avenue generate the half Street below.
      if (Avenue >= Last_Ave) {
        CityHalfStreet(Street, Avenue, (Avenue + 2));
      }
    }
  }
];

! Main function for running the tests.
[ Main;
  ! print "Generating the city map code.^^";

  ! Print a warning at the top of the file.
  print "! Warning! This file is generated from the file 'Utilities/gencity.inf'.^";
  print "! DO NOT EDIT THIS FILE BY HAND.^^";

  GenerateRooms();
];